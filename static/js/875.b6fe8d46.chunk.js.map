{"version":3,"file":"static/js/875.b6fe8d46.chunk.js","mappings":"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","sources":["shared/service.js","store/actions.js","views/Bill/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create();\r\n\r\nconst statusCheck = {\r\n    validateStatus: (status) => {\r\n        if (status === 401) {\r\n            // window.location.reload(true)\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nfunction onError(response) {\r\n    return response;\r\n}\r\n\r\nfunction onSuccess(response) {\r\n    return response;\r\n}\r\n\r\n// console.log('Auth_Key', Auth_Key)\r\n\r\n\r\n// api.defaults.headers.common['x-auth-token'] = \"4e5613a8215d6f50d4fbb9e351d2c56f\"; // 4e5613a8215d6f50d4fbb9e351d2c56f\r\napi.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\napi.defaults.headers.post[\"Accept\"] = \"application/json\";\r\n\r\nexport const dashboardService = {\r\n\r\n    getData: data => api.get(\"https://market-area.herokuapp.com/\", statusCheck).then(onSuccess, onError),\r\n    createData: data => api.post(\"https://market-area.herokuapp.com/add\", data, statusCheck).then(onSuccess, onError),\r\n    // fetchBillData: (id) => api.get(`user/getSingleUser/${id}`, statusCheck).then(onSuccess, onError),\r\n    updateData: (data, id) => api.put(`https://market-area.herokuapp.com/${id}`, data, statusCheck).then(onSuccess, onError),\r\n    deleteData: (id) => api.delete(`https://market-area.herokuapp.com/${id}`, statusCheck).then(onSuccess, onError),\r\n};\r\n","import { dashboardService } from \"../shared/service\";\n\n// get data\nexport function getBillData(next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .getData()\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"GET_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}\n\n// add data\nexport function createFormData(data, next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .createData(data)\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"ADD_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}\n\n//UPDATE data\n\nexport function updateFormData(data, id, next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .updateData(data, id)\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"UPDATE_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}\n\n//delete data\nexport function deleteBillData(id, next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .deleteData(id)\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"DELETE_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}","import { CButton, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow, CFormLabel, CFormSelect } from '@coreui/react'\r\nimport React, { useEffect, useReducer, useRef, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteBillData, getBillData } from '../../store/actions';\r\nimport { useDownloadExcel } from 'react-export-table-to-excel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as XLSX from \"xlsx\";\r\nimport * as XlsxPopulate from \"xlsx-populate/browser/xlsx-populate\";\r\n\r\nconst initialState = {\r\n    optionArr: [],\r\n    company: \"\",\r\n    party: \"\",\r\n    broker: \"\"\r\n}\r\n\r\nconst reducer = (state, payload) => ({ ...state, ...payload });\r\n\r\nconst Index = () => {\r\n    const [bill, setBill] = useReducer(reducer, initialState);\r\n    const { company, optionArr, party, broker } = bill;\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState([])\r\n    let record = JSON.parse(localStorage.getItem(\"record\"))\r\n\r\n    useEffect(() => {\r\n        getBillData((res) => {\r\n            setState(res.data)\r\n            setBill({ optionArr: res.data })\r\n        })(dispatch)\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        navigate('/addBill')\r\n    }\r\n\r\n    const onEdit = (id, item) => {\r\n        navigate(`/addBill/${id}`, {\r\n            state: item\r\n        })\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        deleteBillData(id, (res) => {\r\n            toast.error(\"Deleted Successfuly!!!\", { position: toast.POSITION.TOP_RIGHT, });\r\n            getBillData((res) => {\r\n                setState(res.data)\r\n            })(dispatch)\r\n        })(dispatch)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === \"company\") {\r\n            let arr = [];\r\n            arr = optionArr.filter((e) => e.cname == value)\r\n            setBill({\r\n                ...bill,\r\n                [name]: value,\r\n            })\r\n            setState(arr)\r\n        } else if (name === \"party\") {\r\n            let arr = [];\r\n            arr = optionArr.filter((e) => e.pname == value)\r\n            setBill({\r\n                ...bill,\r\n                [name]: value,\r\n            })\r\n            setState(arr)\r\n        } else {\r\n            let arr = [];\r\n            arr = optionArr.filter((e) => e.bname == value)\r\n            setBill({\r\n                ...bill,\r\n                [name]: value,\r\n            })\r\n            setState(arr)\r\n        }\r\n    }\r\n\r\n    const onClear = (e) => {\r\n        setBill({\r\n            ...bill,\r\n            company: \"\",\r\n            party: \"\",\r\n            broker: \"\"\r\n        })\r\n        getBillData((res) => {\r\n            setState(res.data)\r\n            setBill({ optionArr: res.data })\r\n        })(dispatch)\r\n    }\r\n\r\n    const generatePdf = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = `Company Name : ${state[0].cname}      Party Name :  ${state[0].pname}       Address : ${state[0].address}`;\r\n        const headers = [[\"Bill Date\", \"Bill No\", \"Bill Amount\", \"Received Date\", \"Total Days\", \"Net Days\", \"Interest Days\", \"Interest Amount\"]];\r\n\r\n        const data = state.map(item => [moment(item.orderDate).format(\"DD/MM/YYYY\"), item.billNo, item.billAmount, moment(item.receivedDate).format(\"DD/MM/YYYY\"), moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days'),\r\n        item.netDays, moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays, ((item.billAmount * 0.015 / 30) * (moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays)).toFixed(2)]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n    }\r\n\r\n   \r\n        const createDownLoadData = () => {\r\n            handleExport().then((url) => {\r\n              console.log(url);\r\n              const downloadAnchorNode = document.createElement(\"a\");\r\n              downloadAnchorNode.setAttribute(\"href\", url);\r\n              downloadAnchorNode.setAttribute(\"download\", \"Report.xlsx\");\r\n              downloadAnchorNode.click();\r\n              downloadAnchorNode.remove();\r\n            });\r\n          };\r\n        \r\n          const workbook2blob = (workbook) => {\r\n            const wopts = {\r\n              bookType: \"xlsx\",\r\n              bookSST: false,\r\n              type: \"binary\",\r\n            };\r\n        \r\n            const wbout = XLSX.write(workbook, wopts);\r\n        \r\n            // The application/octet-stream MIME type is used for unknown binary files.\r\n            // It preserves the file contents, but requires the receiver to determine file type,\r\n            // for example, from the filename extension.\r\n            const blob = new Blob([s2ab(wbout)], {\r\n              type: \"application/octet-stream\",\r\n            });\r\n        \r\n            return blob;\r\n          };\r\n        \r\n          const s2ab = (s) => {\r\n            // The ArrayBuffer() constructor is used to create ArrayBuffer objects.\r\n            // create an ArrayBuffer with a size in bytes\r\n            const buf = new ArrayBuffer(s.length);\r\n        \r\n            console.log(buf);\r\n        \r\n            //create a 8 bit integer array\r\n            const view = new Uint8Array(buf);\r\n        \r\n            console.log(view);\r\n            //charCodeAt The charCodeAt() method returns an integer between 0 and 65535 representing the UTF-16 code\r\n            for (let i = 0; i !== s.length; ++i) {\r\n              console.log(s.charCodeAt(i));\r\n              view[i] = s.charCodeAt(i);\r\n            }\r\n        \r\n            return buf;\r\n          };\r\n        \r\n          const handleExport = () => {\r\n            const title = [{ A: state[0].cname }, {}];\r\n        \r\n            let table1 = [\r\n              {\r\n                A: \"Bill Date\",\r\n                B: \"Bill No\",\r\n                C: \"Bill Amount\",\r\n                D: \"Received Date\",\r\n                E: \"Total Days\",\r\n                F: \"Net Days\",\r\n                G: \"Interest Days\",\r\n                h: \"interest Amount\",\r\n              },\r\n            ];\r\n           \r\n            state.forEach((row) => {\r\n              const billDetails = row;\r\n        \r\n              table1.push({\r\n                A: moment(billDetails.orderDate).format(\"DD/MM/YYYY\"),\r\n                B: billDetails.billNo,\r\n                C: billDetails.billAmount,\r\n                D: moment(billDetails.receivedDate).format(\"DD/MM/YYYY\"),\r\n                E: moment(moment(billDetails.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(billDetails.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days'),\r\n                F: billDetails.netDays,\r\n                G: moment(moment(billDetails.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(billDetails.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - billDetails.netDays,\r\n                h: ((billDetails.billAmount * 0.015 / 30) * (moment(moment(billDetails.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(billDetails.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - billDetails.netDays)).toFixed(2),\r\n              });\r\n        \r\n            });\r\n\r\n            table1 = [{ A: state[0].pname }]\r\n            .concat([{ A: state[0].address }])\r\n                .concat(table1).concat([{ A: \"Total =\", C: state.reduce(function (cnt, o) { return cnt + Number(o.billAmount); }, 0)}])\r\n        \r\n            const finalData = [...title, ...table1];\r\n        \r\n            //create a new workbook\r\n            const wb = XLSX.utils.book_new();\r\n        \r\n            const sheet = XLSX.utils.json_to_sheet(finalData, {\r\n              skipHeader: true,\r\n            });\r\n        \r\n            XLSX.utils.book_append_sheet(wb, sheet, \"report\");\r\n        \r\n            // binary large object\r\n            // Since blobs can store binary data, they can be used to store images or other multimedia files.\r\n        \r\n            const workbookBlob = workbook2blob(wb);\r\n        \r\n            var headerIndexes = [];\r\n            finalData.forEach((data, index) =>{\r\n              return data[\"A\"] === \"Bill Date\" ? headerIndexes.push(index) : null\r\n            }\r\n            );\r\n        \r\n            const totalRecords = state.length;\r\n            const dataInfo = {\r\n              titleRange: \"A1:H2\",\r\n              partyName: 'A3:D3',\r\n              brokerName:'E3:H3',\r\n              address:'A4:H4',\r\n              total:`A${finalData.length}:H${finalData.length}`,\r\n              totalInt:`H${finalData.length}`,\r\n              tbodyRange: `A5:H${finalData.length}`,\r\n              theadRange: \r\n                headerIndexes?.length >= 1\r\n                  ? `A${headerIndexes[0] + 1}:H${headerIndexes[0] + 1}`\r\n                  : null,\r\n            //   theadRange1:\r\n            //     headerIndexes?.length >= 2\r\n            //       ? `A${headerIndexes[1] + 1}:H${headerIndexes[1] + 1}`\r\n            //       : null,\r\n            //   tFirstColumnRange:\r\n            //     headerIndexes?.length >= 1\r\n            //       ? `A${headerIndexes[0] + 1}:A${totalRecords + headerIndexes[0] + 1}`\r\n            //       : null,\r\n            //   tLastColumnRange:\r\n            //     headerIndexes?.length >= 1\r\n            //       ? `G${headerIndexes[0] + 1}:H${totalRecords + headerIndexes[0] + 1}`\r\n            //       : null,\r\n        \r\n            \r\n            };\r\n        \r\n            return addStyle(workbookBlob, dataInfo);\r\n          };\r\n        \r\n          const addStyle = (workbookBlob, dataInfo) => {\r\n            var totalInterest = state.reduce( function(cnt,o){ return cnt + Number(((o.billAmount * 0.015 / 30) * (moment(moment(o.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(o.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - o.netDays)).toFixed(2)); }, 0)\r\n\r\n            return XlsxPopulate.fromDataAsync(workbookBlob).then((workbook) => {\r\n              workbook.sheets().forEach((sheet) => {\r\n                sheet.usedRange().style({\r\n                  fontFamily: \"Arial\",\r\n                  border:true\r\n                });\r\n        \r\n                sheet.column(\"A\").width(15);\r\n                sheet.column(\"B\").width(15);\r\n                sheet.column(\"C\").width(15);\r\n                sheet.column(\"D\").width(15);\r\n                sheet.column(\"E\").width(15);  \r\n                sheet.column(\"G\").width(15);\r\n                sheet.column(\"H\").width(20);\r\n                sheet.cell(dataInfo.totalInt).value(totalInterest.toFixed(2));;\r\n                sheet.range(dataInfo.titleRange).merged(true).style({\r\n                  bold: true,\r\n                  horizontalAlignment: \"center\",\r\n                  verticalAlignment: \"center\",\r\n                  fill: \"808080\",\r\n                });\r\n        \r\n                if (dataInfo.tbodyRange) {\r\n                  sheet.range(dataInfo.tbodyRange).style({\r\n                    horizontalAlignment: \"center\",\r\n                  });\r\n                }\r\n        \r\n                sheet.range(dataInfo.partyName).merged(true).style({\r\n                    bold: true,\r\n                    horizontalAlignment:\"left\"\r\n                  });\r\n        \r\n                sheet.range(dataInfo.brokerName).merged(true).style({\r\n                  bold: true,\r\n                  horizontalAlignment: \"right\"\r\n                }).value(state[0].bname);\r\n        \r\n                sheet.range(dataInfo.address).merged(true).style({\r\n                  bold: true,\r\n                  horizontalAlignment: \"left\"\r\n                });\r\n                  \r\n                sheet.range(dataInfo.theadRange).style({\r\n                  fill: \"808080\",\r\n                  bold: true,\r\n                  horizontalAlignment: \"center\",\r\n                });\r\n        \r\n                sheet.range(dataInfo.total).style({\r\n                  bold: true,\r\n                });\r\n        \r\n                // if (dataInfo.theadRange1) {\r\n                //   sheet.range(dataInfo.theadRange1).style({\r\n                //     fill: \"808080\",\r\n                //     bold: true,\r\n                //     horizontalAlignment: \"center\",\r\n                //     fontColor: \"ffffff\",\r\n                //   });\r\n                // }\r\n        \r\n                // if (dataInfo.tFirstColumnRange) {\r\n                //   sheet.range(dataInfo.tFirstColumnRange).style({\r\n                //     bold: true,\r\n                //   });\r\n                // }\r\n        \r\n                // if (dataInfo.tLastColumnRange) {\r\n                //   sheet.range(dataInfo.tLastColumnRange).style({\r\n                //     bold: true,\r\n                //   });\r\n                // }\r\n        \r\n                // if (dataInfo.tFirstColumnRange1) {\r\n                //   sheet.range(dataInfo.tFirstColumnRange1).style({\r\n                //     bold: true,\r\n                //   });\r\n                // }\r\n        \r\n                // if (dataInfo.tLastColumnRange1) {\r\n                //   sheet.range(dataInfo.tLastColumnRange1).style({\r\n                //     bold: true,\r\n                //   });\r\n                // }\r\n              });\r\n        \r\n              return workbook\r\n                .outputAsync()\r\n                .then((workbookBlob) => URL.createObjectURL(workbookBlob));\r\n            });\r\n          };\r\n        \r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='mb-12 col-sm-12 col-md-2'>\r\n                    <div className=\"mb-3\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <CFormLabel htmlFor=\"exampleFormControlTextarea1\">Company Name</CFormLabel>\r\n                        <CFormSelect aria-label=\"Default select example\" name=\"company\" value={company} onChange={handleChange}>\r\n                            <option value=\"\" disabled>Company Name</option>\r\n                            {Array.from(new Set(optionArr.map(obj => obj.cname))).map(cname => {\r\n                                return <option value={cname}>{cname}</option>\r\n                            })}\r\n                        </CFormSelect>\r\n                    </div>\r\n                </div>\r\n                <div className='mb-12 col-sm-12 col-md-2'>\r\n                    <div className=\"mb-3\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <CFormLabel htmlFor=\"exampleFormControlTextarea1\">Party Name</CFormLabel>\r\n                        <CFormSelect aria-label=\"Default select example\" name=\"party\" value={party} onChange={handleChange}>\r\n                            <option value=\"\" disabled>Party Name</option>\r\n                            {Array.from(new Set(optionArr.map(obj => obj.pname))).map(pname => {\r\n                                return <option value={pname}>{pname}</option>\r\n                            })}\r\n                        </CFormSelect>\r\n                    </div>\r\n                </div>\r\n                <div className='mb-12 col-sm-12 col-md-2'>\r\n                    <div className=\"mb-3\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <CFormLabel htmlFor=\"exampleFormControlTextarea1\">Broker Name</CFormLabel>\r\n                        <CFormSelect aria-label=\"Default select example\" name=\"broker\" value={broker} onChange={handleChange}>\r\n                            <option value=\"\" disabled>Broker Name</option>\r\n                            {Array.from(new Set(optionArr.map(obj => obj.bname))).map(bname => {\r\n                                return <option value={bname}>{bname}</option>\r\n                            })}\r\n                        </CFormSelect>\r\n                    </div>\r\n                </div>\r\n                <div className='mb-12 col-sm-12 col-md-2'>\r\n                    <div className=\"mb-3 pt-1\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <CButton color=\"success\" style={{ float: \"right\",marginTop: \"27px\"}} onClick={onClear}>\r\n                            Clear filter\r\n                        </CButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ display:\"flex\",justifyContent: \"end\" }}>\r\n                <CButton color=\"success\" className=\"px-4\" style={{  marginBottom: \"25px\",marginRight: \"10px\" }} onClick={createDownLoadData}>\r\n                    Preview PDF\r\n                </CButton>\r\n                <CButton color=\"primary\" className=\"px-4\" style={{ marginBottom: \"25px\", marginRight: \"10px\" }} onClick={handleClick}>\r\n                    Add New\r\n                </CButton>\r\n            </div>\r\n            <div style={{ overflowX:\"auto\" }}>\r\n                <CTable striped style={{ background: \"white\" }}>\r\n                    <CTableHead>\r\n                        <CTableRow>\r\n                            <CTableHeaderCell scope=\"col\">Bill Date</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Bill No</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Bill Amount</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Received Date</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Total Days</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Net Days</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Interest Days</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Interest Amount</CTableHeaderCell>\r\n                            <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {\r\n                            state.length != 0 ? state.map((item) => {\r\n                                return (\r\n                                    <CTableRow>\r\n                                        <CTableDataCell>{moment(item.orderDate).format(\"DD/MM/YYYY\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.billNo}</CTableDataCell>\r\n                                        <CTableDataCell>{item.billAmount}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(item.receivedDate).format(\"DD/MM/YYYY\")}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days')}</CTableDataCell>\r\n                                        <CTableDataCell>{item.netDays}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays}</CTableDataCell>\r\n                                        <CTableDataCell>{((item.billAmount * 0.015 / 30) * (moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays)).toFixed(2)}</CTableDataCell>\r\n                                        <CTableDataCell>\r\n                                            <CButton color=\"success\" style={{ marginRight: \"6px\",marginBottom:\"3px\" }} onClick={() => onEdit(item._id, item)}>\r\n                                                Edit\r\n                                            </CButton>\r\n                                            <CButton color=\"danger\" style={{ marginRight: \"6px\" }} onClick={() => onDelete(item._id)}>\r\n                                                Delete\r\n                                            </CButton>\r\n                                        </CTableDataCell>\r\n                                    </CTableRow>\r\n                                )\r\n                            }) :\r\n                                <CTableRow >\r\n                                    <CTableDataCell colSpan={9} style={{ textAlign: 'center' }}>No items found</CTableDataCell>\r\n                                </CTableRow>\r\n                        }\r\n                    </CTableBody>\r\n                </CTable>\r\n            </div>\r\n            <ToastContainer position={toast.POSITION.TOP_RIGHT} autoClose={5000} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index"],"names":["api","axios","statusCheck","validateStatus","status","onError","response","onSuccess","defaults","headers","post","dashboardService","data","get","then","id","put","delete","getBillData","next","dispatch","type","payload","res","catch","e","createFormData","updateFormData","deleteBillData","initialState","optionArr","company","party","broker","reducer","state","useReducer","bill","setBill","navigate","useNavigate","useDispatch","useState","setState","JSON","parse","localStorage","getItem","useEffect","handleChange","target","name","value","arr","filter","cname","pname","bname","s2ab","s","buf","ArrayBuffer","length","console","log","view","Uint8Array","i","charCodeAt","handleExport","title","A","table1","B","C","D","E","F","G","h","forEach","row","billDetails","push","moment","orderDate","format","billNo","billAmount","receivedDate","diff","netDays","toFixed","concat","address","reduce","cnt","o","Number","finalData","wb","XLSX","sheet","skipHeader","workbookBlob","workbook","wbout","bookType","bookSST","Blob","workbook2blob","headerIndexes","index","dataInfo","titleRange","partyName","brokerName","total","totalInt","tbodyRange","theadRange","addStyle","totalInterest","XlsxPopulate","sheets","usedRange","style","fontFamily","border","column","width","cell","range","merged","bold","horizontalAlignment","verticalAlignment","fill","outputAsync","URL","createObjectURL","className","display","flexDirection","htmlFor","onChange","disabled","Array","from","Set","map","obj","color","float","marginTop","onClick","justifyContent","marginBottom","marginRight","url","downloadAnchorNode","document","createElement","setAttribute","click","remove","overflowX","striped","background","scope","item","onEdit","_id","toast","position","colSpan","textAlign","autoClose"],"sourceRoot":""}