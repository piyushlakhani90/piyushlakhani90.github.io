{"version":3,"file":"static/js/405.17826712.chunk.js","mappings":"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","sources":["shared/service.js","store/actions.js","views/Dashboard/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create();\r\n\r\nconst statusCheck = {\r\n    validateStatus: (status) => {\r\n        if (status === 401) {\r\n            // window.location.reload(true)\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nfunction onError(response) {\r\n    return response;\r\n}\r\n\r\nfunction onSuccess(response) {\r\n    return response;\r\n}\r\n\r\n// console.log('Auth_Key', Auth_Key)\r\n\r\n\r\n// api.defaults.headers.common['x-auth-token'] = \"4e5613a8215d6f50d4fbb9e351d2c56f\"; // 4e5613a8215d6f50d4fbb9e351d2c56f\r\napi.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\napi.defaults.headers.post[\"Accept\"] = \"application/json\";\r\n\r\nexport const dashboardService = {\r\n\r\n    getData: data => api.get(\"https://market-area.herokuapp.com/\", statusCheck).then(onSuccess, onError),\r\n    createData: data => api.post(\"https://market-area.herokuapp.com/add\", data, statusCheck).then(onSuccess, onError),\r\n    // fetchBillData: (id) => api.get(`user/getSingleUser/${id}`, statusCheck).then(onSuccess, onError),\r\n    updateData: (data, id) => api.put(`https://market-area.herokuapp.com/${id}`, data, statusCheck).then(onSuccess, onError),\r\n    deleteData: (id) => api.delete(`https://market-area.herokuapp.com/${id}`, statusCheck).then(onSuccess, onError),\r\n};\r\n","import { dashboardService } from \"../shared/service\";\n\n// get data\nexport function getBillData(next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .getData()\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"GET_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}\n\n// add data\nexport function createFormData(data, next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .createData(data)\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"ADD_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}\n\n//UPDATE data\n\nexport function updateFormData(data, id, next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .updateData(data, id)\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"UPDATE_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}\n\n//delete data\nexport function deleteBillData(id, next) {\n    return (dispatch) => {\n        dispatch({ type: \"LOADING\", payload: true });\n\n        dashboardService\n            .deleteData(id)\n            .then((res) => {\n                // dispatch({ type: \"LOADING\", payload: false });\n                dispatch({ type: \"DELETE_DATA\", payload: res.data });\n                next(res.data);\n            })\n            .catch((e) => { });\n    };\n}","import {\r\n    CButton, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow, CModal, CModalBody,\r\n    CModalFooter, CModalHeader, CModalTitle, CForm, CFormInput, CFormLabel, CBadge, CFormTextarea\r\n} from '@coreui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteBillData, getBillData } from '../../store/actions';\r\n\r\nconst Index = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState([])\r\n    let record = JSON.parse(localStorage.getItem(\"record\"))\r\n\r\n    useEffect(() => {\r\n        getBillData((res) => {\r\n            setState(res.data)\r\n        })(dispatch)\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        navigate('/addBill')\r\n    }\r\n\r\n    const onEdit = (id, item) => {\r\n        navigate(`/addBill/${id}`, {\r\n            state: item\r\n        })\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        deleteBillData(id, (res) => {\r\n            getBillData((res) => {\r\n                setState(res.data)\r\n            })(dispatch)\r\n        })(dispatch)\r\n    }\r\n\r\n    const generatePdf = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"\";\r\n        const headers = [[\"Bill Date\", \"Bill No\", \"Bill Amount\", \"Received Date\", \"Total Days\", \"Net Days\", \"Interest Days\", \"Interest Amount\"]];\r\n\r\n        const data = state.map(item => [moment(item.orderDate).format(\"DD/MM/YYYY\"), item.billNo, item.billAmount, moment(item.receivedDate).format(\"DD/MM/YYYY\"), moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days'),\r\n        item.netDays, moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays, ((item.billAmount * 0.015 / 30) * (moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays)).toFixed(2)]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CButton color=\"success\" className=\"px-4\" style={{ float: \"right\", marginBottom: \"25px\" }} onClick={generatePdf}>\r\n                Preview PDF\r\n            </CButton>\r\n            <CButton color=\"primary\" className=\"px-4\" style={{ float: \"right\", marginBottom: \"25px\", marginRight: \"10px\" }} onClick={handleClick}>\r\n                Add New\r\n            </CButton>\r\n            <CTable striped style={{ background: \"white\" }}>\r\n                <CTableHead>\r\n                    <CTableRow>\r\n                        <CTableHeaderCell scope=\"col\">Bill Date</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Bill No</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Bill Amount</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Received Date</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Total Days</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Net Days</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Interest Days</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Interest Amount</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                    </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                    {\r\n                        state.length != 0 ? state.map((item) => {\r\n                            return (\r\n                                <CTableRow>\r\n                                    <CTableDataCell>{moment(item.orderDate).format(\"DD/MM/YYYY\")}</CTableDataCell>\r\n                                    <CTableDataCell>{item.billNo}</CTableDataCell>\r\n                                    <CTableDataCell>{item.billAmount}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(item.receivedDate).format(\"DD/MM/YYYY\")}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days')}</CTableDataCell>\r\n                                    <CTableDataCell>{item.netDays}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays}</CTableDataCell>\r\n                                    <CTableDataCell>{((item.billAmount * 0.015 / 30) * (moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays)).toFixed(2)}</CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CButton color=\"success\" style={{ marginRight: \"6px\" }} onClick={() => onEdit(item._id, item)}>\r\n                                            Edit\r\n                                        </CButton>\r\n                                        <CButton color=\"danger\" style={{ marginRight: \"6px\" }} onClick={() => onDelete(item._id)}>\r\n                                            Delete\r\n                                        </CButton>\r\n                                    </CTableDataCell>\r\n                                </CTableRow>\r\n                            )\r\n                        }) :\r\n                            <CTableRow >\r\n                                <CTableDataCell colSpan={9} style={{ textAlign: 'center' }}>No items found</CTableDataCell>\r\n                            </CTableRow>\r\n                    }\r\n                </CTableBody>\r\n            </CTable>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index"],"names":["api","axios","statusCheck","validateStatus","status","onError","response","onSuccess","defaults","headers","post","dashboardService","data","get","then","id","put","delete","getBillData","next","dispatch","type","payload","res","catch","e","createFormData","updateFormData","deleteBillData","navigate","useNavigate","useDispatch","useState","state","setState","JSON","parse","localStorage","getItem","useEffect","color","className","style","float","marginBottom","onClick","doc","jsPDF","setFontSize","content","startY","head","body","map","item","moment","orderDate","format","billNo","billAmount","receivedDate","diff","netDays","toFixed","text","autoTable","save","marginRight","striped","background","scope","length","onEdit","_id","colSpan","textAlign"],"sourceRoot":""}