{"version":3,"file":"static/js/239.bb45a1b7.chunk.js","mappings":"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","sources":["views/Bill/AddBill/AddBill.js"],"sourcesContent":["import React, { useEffect, useReducer, useRef, useState } from 'react'\r\nimport {\r\n    CButton, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow, CModal, CModalBody,\r\n    CModalFooter, CModalHeader, CModalTitle, CForm, CFormInput, CFormLabel, CFormTextarea, CDatePicker, CDropdown, CDropdownToggle, CDropdownMenu, CDropdownItem, CFormSelect\r\n} from '@coreui/react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    sendReq: {\r\n        orderDate: new Date(),\r\n        receivedDate: new Date(),\r\n        billNo: \"\",\r\n        billAmount: \"\",\r\n        netDays: \"\",\r\n    },\r\n}\r\n\r\nconst reducer = (state, payload) => ({ ...state, ...payload });\r\n\r\nconst AddBill = () => {\r\n    const [bill, setBill] = useReducer(reducer, initialState);\r\n    const { sendReq } = bill;\r\n    const validator = useRef(new SimpleReactValidator());\r\n    const [, forceUpdate] = useState();\r\n    const navigate = useNavigate();\r\n    const paramId = window.location.pathname.split('/')[2]\r\n    console.log('location.pathname', window.location.pathname.split('/')[2])\r\n\r\n    useEffect(() => {\r\n        if (paramId) {\r\n            let record = JSON.parse(localStorage.getItem(\"record\"))\r\n            let obj = record.find((i) => i.id == paramId)\r\n            console.log('obj', obj)\r\n            if (!!obj) {\r\n                setBill({\r\n                    ...bill,\r\n                    sendReq: {\r\n                        orderDate: moment(obj.orderDate).toDate(),\r\n                        receivedDate: moment(obj.receivedDate).toDate(),\r\n                        billNo: obj.billNo,\r\n                        billAmount: obj.billAmount,\r\n                        netDays: obj.netDays,\r\n                    },\r\n                })\r\n            }\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    const handleClick = () => {\r\n        navigate('/bill')\r\n    }\r\n\r\n    const setStartDate = (date, name) => {\r\n        if (name === \"startDate\") {\r\n            setBill({\r\n                ...bill,\r\n                sendReq: {\r\n                    ...sendReq,\r\n                    orderDate: date\r\n                }\r\n            })\r\n        } else {\r\n            setBill({\r\n                ...bill,\r\n                sendReq: {\r\n                    ...sendReq,\r\n                    receivedDate: date\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setBill({\r\n            ...bill,\r\n            sendReq: {\r\n                ...sendReq,\r\n                [name]: value,\r\n            }\r\n        })\r\n    }\r\n\r\n    const onlyNumber = (event) => {\r\n        const keycode = event.which;\r\n        if (keycode === 13) {\r\n        } else if (\r\n            !(\r\n                event.shiftKey === false &&\r\n                (keycode === 8 ||\r\n                    keycode === 18 ||\r\n                    keycode === 37 ||\r\n                    keycode === 39 ||\r\n                    keycode === 46 ||\r\n                    (keycode >= 48 && keycode <= 57))\r\n            )\r\n        )\r\n            event.preventDefault();\r\n    };\r\n\r\n    const onSave = () => {\r\n        if (validator.current.allValid()) {\r\n            console.log('moment(moment(sendReq.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").', moment(moment(sendReq.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(sendReq.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days'))\r\n            if (sendReq.netDays > moment(moment(sendReq.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(sendReq.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days')) {\r\n                toast.error(\"please enter valid net days\", { position: toast.POSITION.TOP_RIGHT, });\r\n            } else {\r\n                if (paramId) {\r\n                    let record = JSON.parse(localStorage.getItem(\"record\"))\r\n                    let obj = record.find((i) => i.id == paramId)\r\n                    obj.billNo = sendReq.billNo\r\n                    obj.billAmount = sendReq.billAmount\r\n                    obj.orderDate = sendReq.orderDate\r\n                    obj.receivedDate = sendReq.receivedDate\r\n                    obj.netDays = sendReq.netDays\r\n                    sendReq.id = paramId\r\n                    localStorage.setItem(\"record\", JSON.stringify(record))\r\n                    navigate('/bill')\r\n                } else {\r\n                    sendReq.id = Date.now();\r\n                    let arr = JSON.parse(localStorage.getItem(\"record\")) ? JSON.parse(localStorage.getItem(\"record\")) : [];\r\n                    arr.push(sendReq)\r\n                    localStorage.setItem(\"record\", JSON.stringify(arr))\r\n                    navigate('/bill')\r\n                }\r\n            }\r\n        } else {\r\n            validator.current.showMessages(true);\r\n            forceUpdate(1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='salesOrder'>\r\n            <h5 style={{ marginBottom: \"20px\" }} >Add Bill Details</h5>\r\n            <CForm >\r\n                <div className='sales_form '>\r\n                    <div className='row'>\r\n\r\n                        <div className='mb-12 col-sm-12 col-md-6'>\r\n                            <div className=\"mb-3 datepicker\">\r\n                                <CFormLabel htmlFor=\"exampleFormControlInput1\">Bill Date </CFormLabel>\r\n                                <div className=\"d-flex flex-wrap\" style={{ position: \"relative\" }}>\r\n                                    <DatePicker\r\n                                        name=\"startDate\"\r\n                                        autoComplete=\"off\"\r\n                                        minDate={new Date()}\r\n                                        selected={sendReq.orderDate}\r\n                                        selectsStart\r\n                                        onChange={(date) => setStartDate(date, \"startDate\")}\r\n                                    />\r\n                                    <span className=\"date_icon\"><img src=\"/img/date_icon.svg\" alt=\"start date\" /></span>\r\n                                </div>\r\n                                <span style={{ color: 'red' }}>{validator.current.message('bill date', sendReq.orderDate, 'required')}</span>\r\n                                {/* <CDatePicker date=\"2022/2/16\" /> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='mb-12 col-sm-12 col-md-6'>\r\n                            <div className=\"mb-3\">\r\n                                <CFormLabel htmlFor=\"exampleFormControlInput1\">Bill No</CFormLabel>\r\n                                <CFormInput type=\"text\" name=\"billNo\" id=\"exampleFormControlInput1\" placeholder=\"Bill No\" value={sendReq.billNo} onChange={handleChange} onKeyPress={onlyNumber} />\r\n                            </div>\r\n                            <span style={{ color: 'red' }}>{validator.current.message('billNo', sendReq.billNo, 'required')}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='mb-12 col-sm-12 col-md-6'>\r\n                            <div className=\"mb-3 datepicker\">\r\n                                <CFormLabel htmlFor=\"exampleFormControlInput1\">Received Date</CFormLabel>\r\n                                <div className=\"d-flex flex-wrap\" style={{ position: \"relative\" }}>\r\n                                    <DatePicker\r\n                                        name=\"receivedDate\"\r\n                                        autoComplete=\"off\"\r\n                                        minDate={new Date()}\r\n                                        selected={sendReq.receivedDate}\r\n                                        selectsStart\r\n                                        onChange={(date) => setStartDate(date, \"receivedDate\")}\r\n                                    />\r\n                                    <span className=\"date_icon\"><img src=\"/img/date_icon.svg\" alt=\"start date\" /></span>\r\n                                </div>\r\n                                <span style={{ color: 'red' }}>{validator.current.message('receivedDate', sendReq.receivedDate, 'required')}</span>\r\n                                {/* <CDatePicker date=\"2022/2/16\" /> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='mb-12 col-sm-12 col-md-6'>\r\n                            <div className=\"mb-3\">\r\n                                <CFormLabel htmlFor=\"exampleFormControlInput1\">Bill Amount</CFormLabel>\r\n                                <CFormInput type=\"text\" name=\"billAmount\" id=\"exampleFormControlInput1\" placeholder=\"Bill Amount\" value={sendReq.billAmount} onChange={handleChange} onKeyPress={onlyNumber} />\r\n                                <span style={{ color: 'red' }}>{validator.current.message('Bill Amount', sendReq.billAmount, 'required')}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='mb-12 col-sm-12 col-md-6'>\r\n                            <div className=\"mb-3\">\r\n                                <CFormLabel htmlFor=\"exampleFormControlInput1\">Net Days</CFormLabel>\r\n                                <CFormInput type=\"text\" name=\"netDays\" id=\"exampleFormControlInput1\" placeholder=\"Net Days\" value={sendReq.netDays} onChange={handleChange} onKeyPress={onlyNumber} />\r\n                                <span style={{ color: 'red' }}>{validator.current.message('Net Days', sendReq.netDays, 'required')}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CForm>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <CButton color=\"primary\" style={{ marginRight: \"6px\" }} onClick={onSave}>Save</CButton>\r\n                <CButton color=\"secondary\" onClick={handleClick}>\r\n                    Cancel\r\n                </CButton>\r\n            </div>\r\n            <ToastContainer position={toast.POSITION.TOP_RIGHT} autoClose={8000} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBill"],"names":["initialState","sendReq","orderDate","Date","receivedDate","billNo","billAmount","netDays","reducer","state","payload","useReducer","bill","setBill","validator","useRef","SimpleReactValidator","useState","forceUpdate","navigate","useNavigate","paramId","window","location","pathname","split","console","log","useEffect","obj","JSON","parse","localStorage","getItem","find","i","id","moment","toDate","setStartDate","date","name","handleChange","e","target","value","onlyNumber","event","keycode","which","shiftKey","preventDefault","className","style","marginBottom","htmlFor","position","autoComplete","minDate","selected","selectsStart","onChange","src","alt","color","current","message","type","placeholder","onKeyPress","textAlign","marginRight","onClick","allValid","format","diff","toast","record","setItem","stringify","now","arr","push","showMessages","autoClose"],"sourceRoot":""}