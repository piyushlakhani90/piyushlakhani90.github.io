{"version":3,"file":"static/js/875.c8ce4997.chunk.js","mappings":"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","sources":["views/Bill/index.js"],"sourcesContent":["import {\r\n    CButton, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow, CModal, CModalBody,\r\n    CModalFooter, CModalHeader, CModalTitle, CForm, CFormInput, CFormLabel, CBadge, CFormTextarea\r\n} from '@coreui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst Index = () => {\r\n    const navigate = useNavigate();\r\n    const [state, setState] = useState([])\r\n    let record = JSON.parse(localStorage.getItem(\"record\"))\r\n\r\n    useEffect(() => {\r\n        if (record) {\r\n            setState(record)\r\n        }\r\n    }, [record])\r\n\r\n    const handleClick = () => {\r\n        navigate('/addBill')\r\n    }\r\n\r\n    const onEdit = (id) => {\r\n        navigate(`/addBill/${id}`)\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        let objIndex = record.findIndex((i) => i.id === id)\r\n        record.splice(objIndex, 1)\r\n        localStorage.setItem(\"record\", JSON.stringify(record))\r\n    }\r\n\r\n    const generatePdf = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"My Report\";\r\n        const headers = [[\"Bill Date\", \"Bill No\", \"Bill Amount\", \"Received Date\", \"Total Days\", \"Net Days\", \"Interest Days\", \"Interest Amount\"]];\r\n\r\n        const data = state.map(item => [moment(item.orderDate).format(\"DD/MM/YYYY\"), item.billNo, item.billAmount, moment(item.receivedDate).format(\"DD/MM/YYYY\"), moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days'),\r\n        item.netDays, moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays, ((item.billAmount * 0.015 / 30) * (moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays)).toFixed(2)]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CButton color=\"success\" className=\"px-4\" style={{ float: \"right\", marginBottom: \"25px\" }} onClick={generatePdf}>\r\n                Preview PDF\r\n            </CButton>\r\n            <CButton color=\"primary\" className=\"px-4\" style={{ float: \"right\", marginBottom: \"25px\", marginRight: \"10px\" }} onClick={handleClick}>\r\n                Add New\r\n            </CButton>\r\n            <CTable striped style={{ background: \"white\" }}>\r\n                <CTableHead>\r\n                    <CTableRow>\r\n                        <CTableHeaderCell scope=\"col\">Bill Date</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Bill No</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Bill Amount</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Received Date</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Total Days</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Net Days</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Interest Days</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Interest Amount</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                    </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                    {\r\n                        state.length != 0 ? state.map((item) => {\r\n                            return (\r\n                                <CTableRow>\r\n                                    <CTableDataCell>{moment(item.orderDate).format(\"DD/MM/YYYY\")}</CTableDataCell>\r\n                                    <CTableDataCell>{item.billNo}</CTableDataCell>\r\n                                    <CTableDataCell>{item.billAmount}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(item.receivedDate).format(\"DD/MM/YYYY\")}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days')}</CTableDataCell>\r\n                                    <CTableDataCell>{item.netDays}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays}</CTableDataCell>\r\n                                    <CTableDataCell>{((item.billAmount * 0.015 / 30) * (moment(moment(item.receivedDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\").diff(moment(moment(item.orderDate).format(\"DD.MM.YYYY\"), \"DD.MM.YYYY\"), 'days') - item.netDays)).toFixed(2)}</CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CButton color=\"success\" style={{ marginRight: \"6px\" }} onClick={() => onEdit(item.id)}>\r\n                                            Edit\r\n                                        </CButton>\r\n                                        <CButton color=\"danger\" style={{ marginRight: \"6px\" }} onClick={() => onDelete(item.id)}>\r\n                                            Delete\r\n                                        </CButton>\r\n                                    </CTableDataCell>\r\n                                </CTableRow>\r\n                            )\r\n                        }) :\r\n                            <CTableRow >\r\n                                <CTableDataCell colSpan={9} style={{ textAlign: 'center' }}>No items found</CTableDataCell>\r\n                            </CTableRow>\r\n                    }\r\n                </CTableBody>\r\n            </CTable>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index"],"names":["navigate","useNavigate","useState","state","setState","record","JSON","parse","localStorage","getItem","useEffect","color","className","style","float","marginBottom","onClick","doc","jsPDF","setFontSize","content","startY","head","body","map","item","moment","orderDate","format","billNo","billAmount","receivedDate","diff","netDays","toFixed","text","autoTable","save","marginRight","striped","background","scope","length","id","objIndex","findIndex","i","splice","setItem","stringify","onDelete","colSpan","textAlign"],"sourceRoot":""}